1.
メモリー上に800 * 400bitの空間(サイズ10000のint型配列)を確保する。
// 確保しなくてもO(N)でそれぞれ点Pと点Sを対応させて距離を測り一番短いのを返せばよい希ガス
その空間上のランダムな座標にランダムな個数の点をプロットしていく。
ある点Pと前回いた点を除いて点Pから最もマンハッタン距離が短い点Sの間に線を引く。

２.
メモリー上に800 * 400bitの空間を確保する。
その空間上に1つの点をプロットする。
プロットした点Pからランダムな半径Rの円を仮定してその円周内に前回いた点以外で1つ以上の点Sがあれば（点Pと点Sとのユーグリッド距離がR以下）
Sの中からランダム一点を選びその点と点Pとの間に線を引く。
そうでなければ円周上で前回引いた線となす角度が10~170もしくは190~350度になるようにランダムに点を取り線を引く。
なお、角度は10度単位で調節する。
// ユーグリッド距離が最も短い点を取らなくては線が重なってしまう可能性がある

3.(有力）
ボロノイ図（早くなるよう少し改良）
ドロネー図（多角形に対応するよう改良）