ドロネー図のある二つの三角形にそれぞれ色が塗られている。
0.5秒ごとに以下の操作を繰り返す。
・前回通ってきた三角形以外の隣接している2つの三角形に
色が塗られていなければそこを現在の三角形の色で塗る。
・上記の操作を施したら前いた場所の色を白色にする。
・上記の操作をすべての色付きの三角形に対して行った後に
もし2色が被っていたらそのターンではそこの三角形の色は
2つの色を合成した色となり、次のターンでは2つの色は
もと来た方向に分解していく。そしてその次のターンからは
通常のアルゴリズムを続行
・もし1色が被っていたらそのターンではその色になり
次のターンでは白色になる

＠作業分解
after関数ではなくスレッドで実現する
１再帰的に三角形すべてを塗りつぶすアルゴリズム。
BFSを用いて実装。
Timesを保持してTimesが一定の間処理を行いTimesが増加すると
(ここに判定処理が入り）0.5秒後にアルゴリズムを再開する
２上記のアルゴリズムで前いた場所が消えるようにする。
３2色で１のアルゴリズムを実装（色は合成）
４２のアルゴリズムに拡張
５分裂や打消しを実装
